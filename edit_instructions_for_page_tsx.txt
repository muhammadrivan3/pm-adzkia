To implement grouping by dosenNama in src/app/(dashboard)/penilaian/page.tsx, apply the following search/replace edits:

1.
Search:
  // Filter and search penilaian
  const filteredData = data.filter((item) => {
    const matchesSearch =
      (item.dosenNama?.toLowerCase().includes(searchQuery.toLowerCase()) ?? false) ||
      (item.subkriteriaNama?.toLowerCase().includes(searchQuery.toLowerCase()) ?? false) ||
      (item.nilai?.toString().includes(searchQuery) ?? false);

    return matchesSearch;
  });

Replace with:
  // Filter and search penilaian
  const filteredData = data.filter((item) => {
    const matchesSearch =
      (item.dosenNama?.toLowerCase().includes(searchQuery.toLowerCase()) ?? false) ||
      (item.subkriteriaNama?.toLowerCase().includes(searchQuery.toLowerCase()) ?? false) ||
      (item.nilai?.toString().includes(searchQuery) ?? false);

    return matchesSearch;
  });

  // Group filteredData by dosenNama
  const groupedData = filteredData.reduce((groups, item) => {
    const group = groups[item.dosenNama] || [];
    group.push(item);
    groups[item.dosenNama] = group;
    return groups;
  }, {} as Record<string, typeof filteredData>);

2.
Search:
  <TableBody>
    {filteredData.map((item) => (
      <TableRow key={item.id}>
        <TableCell>{item.dosenNama}</TableCell>
        <TableCell>{item.subkriteriaNama}</TableCell>
        <TableCell>{item.nilai}</TableCell>
        <TableCell className="text-center space-x-2">
          <Button
            size="sm"
            variant="secondary"
            className="px-2"
            onClick={() => openModal(item.id ?? "default-id", "update")}
          >
            <Edit className="w-4 h-4" />
          </Button>
          <Button
            size="sm"
            variant="destructive"
            className="px-2"
            onClick={() => openModal(item.id ?? "default-id", "delete")}
          >
            <Trash className="w-4 h-4" />
          </Button>
        </TableCell>
      </TableRow>
    ))}
  </TableBody>

Replace with:
  <TableBody>
    {Object.entries(groupedData).map(([dosenNama, items]) => (
      <React.Fragment key={dosenNama}>
        <TableRow className="bg-gray-200 dark:bg-gray-700 font-semibold">
          <TableCell colSpan={4}>{dosenNama}</TableCell>
        </TableRow>
        {items.map((item) => (
          <TableRow key={item.id}>
            <TableCell></TableCell>
            <TableCell>{item.subkriteriaNama}</TableCell>
            <TableCell>{item.nilai}</TableCell>
            <TableCell className="text-center space-x-2">
              <Button
                size="sm"
                variant="secondary"
                className="px-2"
                onClick={() => openModal(item.id ?? "default-id", "update")}
              >
                <Edit className="w-4 h-4" />
              </Button>
              <Button
                size="sm"
                variant="destructive"
                className="px-2"
                onClick={() => openModal(item.id ?? "default-id", "delete")}
              >
                <Trash className="w-4 h-4" />
              </Button>
            </TableCell>
          </TableRow>
        ))}
      </React.Fragment>
    ))}
  </TableBody>

Apply these edits in order to achieve the desired grouping by dosenNama.
